


// refrence
1. ship sail speed limmit
https://www.marineinsight.com/guidelines/speed-of-a-ship-at-sea/
{
    container ships : 16 to 24 knots
}
2. geoJson library
https://docs.eegeo.com/eegeo.js/v0.1.780/docs/leaflet/L.Polyline/




var poly = {
    "type": "Feature",
    "properties": {},
    "geometry": {
      "type": "Polygon",
      "coordinates": [
        [
          [
            105,
            1
          ],
          [
            115,
            -1
          ],
          [
            105,
            0
          ],
          [
            95,
            -1
          ],
          [
            105,
            1
          ]
        ]
      ]
    }
  }



var lines = {
    "type": "Feature",
    "properties": {},
    "geometry": {
      "type": "MultiLineString",
      "coordinates": [
      [[
          44,
          46.5
        ],
        [
          56,
          46.5
        ]],
       [[
          44,
          46.8
        ],
        [
          50,
          46.8
        ]],
        [[
          50,
          46.3
        ],
        [
          56,
          46.3
        ]],
        [[
          44,
          44.5
        ],
        [
          56,
          44.5
        ]],
        [[
          48,
          45
        ],
        [
          56,
          45
        ]],
        [[
          44,
          45.5
        ],
        [
          51.5,
          45.5
        ]],
        [[
          46.4,
          44
        ],
        [
          53.7,
          44
        ]]
      ]
    }
  }

var polyStyle = {
  "color": "#ff7800",
  "weight": 5,
  "opacity": 0.65
};

var polyLayer = L.geoJSON(poly, {
  style: polyStyle
}).addTo(map);

var lineStyle = {
  "color": "#ff7800",
  "weight": 5,
  "opacity": 0.65
};

var lineLayer = L.geoJSON(lines, {
  style: lineStyle
}).addTo(map);

map.fitBounds(lineLayer.getBounds());

lines.geometry.coordinates.forEach(part => {
let split = turf.lineSplit(turf.lineString(part), poly);
let oddPair;
if(turf.booleanPointInPolygon(turf.point(part[0]), poly)){
  oddPair = 0;
} else {
  oddPair = 1;
}
split.features.forEach((splitedPart, i) => {
  if((i + oddPair)%2 === 0) {
    L.geoJSON(splitedPart.geometry).addTo(map);
  }
});
});



function loading(){
    $(document).ready(function(){
        var counter = 0;
        var c = 0;
        var i = setInterval(function(){
            $(".loader .loading h1").html(c + "%");
            $(".loader .loading hr").css("width", c + "%");
            $(".loading-page .counter").css("background", "linear-gradient(to right, #f60d54 "+ c + "%,#0d0d0d "+ c + "%)");
            $(".loading-page .counter h1.color").css("width", c + "%");
            counter++;
            c++;
            if(counter == 101) {
                clearInterval(i);
            }
        }, 50);
    });
}



//==============================================================================================
// asistensi 13 mei 2022 
1. kecepatan
2. 
3. time departure
4. esimate time arrival
5. radius kapal dari pingir pantai 100m
6. max steer 35 deg port side and star board
7. jarak antara pingir pantai ke kapal kira kira 15 nm
8. pembuatan skenario dari port a ke boar
   kemudian di test ke port yang lainnya
  untuk menentukan apakah algoritma nya dapat di uji coba ke port lainnya
9. ganti ship icon jadi icon yang lebih real


//===============================================================================================
Progress 26 Mei 2022
1. masih ada bug di TPK pelawan dan PT IPC Terminal Peti Kemas (kesalahan pada saat mencari radius)
2. ubah algoritma radius bertambah panjanga jika obsteclenya jauh
3. masih ada bug pada saat mengenerate beberapa wayline di beberapa pelauhan, ada kesalahan pada newwaycoor


// ===================
class yang di pake
1. fullscr
2. dinamic info
3. start_bar
4. port_of_org
5. port_of_dest
6. list_org
7. list_dest
8. find_btn
9. cancel_btn
10. port_icon
11. route_explore
12. close
13. active



// =================================================================================================
asistensi 10 juni 2022
1. menambahkan engine simulator
2. bersihkan bug pada waypoint

target 
1. membuat obstacle yang bergerak






// ==================== hasil pertemuan PKM
1. Target utama kita memasukkan engine indicator
2. targtet ke 2 yaitu membuat steering wherl drive
3. membat tampilan bridge dan kemudian ada tampak luat kapal
4. nanti diskenario harus ada pelengkap aksesoris seperti dashboard
5. 


// ================================================ analisis waypoint
yang sudah aman
1. TPK surabaya - IPC terminal peti Kemas
2. TPK semarang - IPC terminal peti kemas
3. TPK belawan - TPK perawang
4. TPK - perawang - TPK belawan
5. TPK Banjarmasin - TPK Kaltim kariangau
6. 


yang belum
1. TPK makassar - kupang


// asistensi 24 juni
1. mengapa algoritma ini dibuat??
untuk menerapkan otomasi khususnya untuk kapal kontainer, rute yang ada sekarang bersifat sebagai asisten. Rutnya berupa acuan saja. Sistem otonom memerlukan artificial intelligence untuk menemukan rute yang baru. Sistem ini sangat membantu untuk menerapkan sistem otomasi pelayarana di Indonesia.

2. regulasi
Jadi untuk rute pelayaran sudah dipastkan (fix). Namun, yang ada di aplikasi memiliki kemampuan adaptif atau penyesuain, untuk lebih jelasnya ditanyakan kepada pak Saut. 

3. Untuk pengiriman data menggunakan satelite

4. tampilan di aplikasi 
-bahan bakar
-rpm